package ${package.Controller};

import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.fastermaker.common.result.PageResult;
import com.fastermaker.common.result.Result;
import ${package.Parent}.model.form.${entity}Form;
import ${package.Parent}.model.query.${entity}PageQuery;
import ${package.Parent}.model.vo.${entity}PageVO;
import ${package.Parent}.service.${table.serviceName};
import com.fastermaker.plugin.syslog.annotation.LogAnnotation;
import com.fastermaker.common.validator.UpdateGroup;
import org.springframework.security.access.prepost.PreAuthorize;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.Operation;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import jakarta.validation.Valid;

#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * $!{table.comment} 前端控制器
 *
 * @author ${author}
 * @since ${date}
 */
@Tag(name = "${table.comment}接口")
@RestController
@RequestMapping("/api/v1/${firstCharLowerCaseEntity}")
@RequiredArgsConstructor
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

        private final ${table.serviceName} ${firstCharLowerCaseEntity}Service;

        @Operation(summary = "$!{table.comment}分页列表")
        @PostMapping("/listPage")
        @PreAuthorize("@permission.hasPerm('${module}:${firstCharLowerCaseEntity}:list')")
        @LogAnnotation( value = "$!{table.comment}分页列表",module = LogModuleEnum.OTHER)
        public PageResult<${entity}PageVO> listPage(@RequestBody ${entity}PageQuery queryParams) {
            IPage<${entity}PageVO> result = ${firstCharLowerCaseEntity}Service.listPage(queryParams);
            return PageResult.success(result);
        }

        @Operation(summary = "新增$!{table.comment}")
        @PostMapping("/save")
        @PreAuthorize("@permission.hasPerm('${module}:${firstCharLowerCaseEntity}:save')")
        @LogAnnotation( value = "新增$!{table.comment}",module = LogModuleEnum.OTHER)
        public Result save(@RequestBody @Valid ${entity}Form formData ) {
            boolean result = ${firstCharLowerCaseEntity}Service.save(formData);
            return Result.judge(result);
        }

        @Operation(summary = "$!{table.comment}表单数据")
        @GetMapping("/getFormData/{id}")
        @PreAuthorize("@permission.hasPerm('${module}:${firstCharLowerCaseEntity}:list')")
        @LogAnnotation( value = "$!{table.comment}表单数据",module = LogModuleEnum.OTHER)
        public Result<${entity}Form> getFormData(@Parameter(description = "$!{table.comment}ID") @PathVariable Long id) {
            ${entity}Form formData = ${firstCharLowerCaseEntity}Service.getFormData(id);
            return Result.success(formData);
        }

        @Operation(summary = "修改$!{table.comment}")
        @PutMapping(value = "/update")
        @PreAuthorize("@permission.hasPerm('${module}:${firstCharLowerCaseEntity}:update')")
        @LogAnnotation( value = "修改$!{table.comment}",module = LogModuleEnum.OTHER)
        public Result update(@RequestBody @Validated(UpdateGroup.class) ${entity}Form formData) {
            boolean result = ${firstCharLowerCaseEntity}Service.update(formData);
            return Result.judge(result);
        }

        @Operation(summary = "删除$!{table.comment}")
        @DeleteMapping("/delete/{ids}")
        @PreAuthorize("@permission.hasPerm('${module}:${firstCharLowerCaseEntity}:delete')")
        @LogAnnotation( value = "删除$!{table.comment}",module = LogModuleEnum.OTHER)
        public Result delete(@Parameter(description = "$!{table.comment}ID，多个以英文逗号(,)分割") @PathVariable String ids) {
            boolean result = ${firstCharLowerCaseEntity}Service.delete(ids);
            return Result.judge(result);
        }
}
